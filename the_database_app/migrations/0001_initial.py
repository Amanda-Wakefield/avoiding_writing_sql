# Generated by Django 3.2.12 on 2022-03-24 22:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniprot_id', models.CharField(max_length=200, unique=True)),
                ('accession', models.CharField(max_length=50)),
                ('iuphar_name', models.CharField(max_length=50)),
                ('receptor_class', models.CharField(choices=[('Class A (Rhodopsin)', 'Class A'), ('Class B1 (Secretin)', 'Class B1'), ('Class B2 (Adhesion)', 'Class B2'), ('Class C (Glutamate)', 'Class C'), ('Class D1 (Ste2-like fungal pheromone)', 'Class D1'), ('Class F (Frizzled)', 'Class F')], max_length=40)),
                ('family', models.CharField(max_length=250)),
                ('subfamily', models.CharField(max_length=250)),
                ('species', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb_id', models.CharField(max_length=4, unique=True)),
                ('method', models.CharField(choices=[('X-ray Diffraction', 'Xray'), ('Electron crystallography', 'Electron Crys'), ('Electron microscopy', 'Electron Micro')], max_length=25)),
                ('resolution', models.FloatField(blank=True, null=True)),
                ('deposition_date', models.DateField()),
                ('pdb_file', models.FileField(blank=True, null=True, upload_to='gpcrs/raw_pdbs/')),
                ('publication', models.CharField(blank=True, max_length=250, null=True)),
                ('chain', models.CharField(max_length=1)),
                ('raw_pdb_file', models.FileField(blank=True, null=True, upload_to='gpcrs/raw_pdbs/')),
                ('domain_pdb_file', models.FileField(blank=True, null=True, upload_to='gpcrs/domain_split_pdbs/')),
                ('mapped_pdb_file', models.FileField(blank=True, null=True, upload_to='gpcrs/mapped_pdbs/')),
                ('protein', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gpcrs', to='the_database_app.protein')),
            ],
        ),
        migrations.CreateModel(
            name='AlloStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ligand_id', models.CharField(max_length=3)),
                ('pdb_file', models.FileField(upload_to='gpcrs/allo_pdbs/')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='the_database_app.structure')),
            ],
        ),
        migrations.CreateModel(
            name='Similarities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rmsd', models.FloatField(blank=True, null=True)),
                ('probe_overlap', models.IntegerField(blank=True, null=True)),
                ('allo_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AlloStructure', to='the_database_app.allostructure')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Structure', to='the_database_app.structure')),
            ],
            options={
                'unique_together': {('allo_structure', 'structure')},
            },
        ),
    ]
